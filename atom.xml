<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>丹尼爾の幻想世界</title>
  
  
  <link href="https://www.6crazydaniel9.net/atom.xml" rel="self"/>
  
  <link href="https://www.6crazydaniel9.net/"/>
  <updated>2022-07-30T12:56:44.938Z</updated>
  <id>https://www.6crazydaniel9.net/</id>
  
  <author>
    <name>CrazyDaniel</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>916. Word Subsets</title>
    <link href="https://www.6crazydaniel9.net/2022/07/30/leetcode916/"/>
    <id>https://www.6crazydaniel9.net/2022/07/30/leetcode916/</id>
    <published>2022-07-30T12:47:18.750Z</published>
    <updated>2022-07-30T12:56:44.938Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>給予兩個字串的陣列，words1、words2<br>判斷words2內的單詞，是否為words1的Subsets<br>要符合所有words2內的所有組合，才算是words1的Subsets</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>先將words2單字內出現的字母數量記錄下來<br>而為什麼要取Max的原因在於，如果符合最大的出現數目，代表其數目以下也會符合為單字的子集合<br>根據這樣的想法，再去判斷就可以輕鬆解決題目</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">wordSubsets</span><span class="params">(vector&lt;string&gt;&amp; words1, vector&lt;string&gt;&amp; words2)</span> </span>&#123;</span><br><span class="line">        vector&lt;string&gt; ans;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">Charcount</span><span class="params">(<span class="number">26</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;words2.<span class="built_in">size</span>();++i)</span><br><span class="line">        &#123;</span><br><span class="line">            vector&lt;<span class="type">int</span>&gt; t = <span class="built_in">counter</span>(words2[i]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;++j)</span><br><span class="line">                Charcount[j] = <span class="built_in">max</span>(Charcount[j],t[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;words1.<span class="built_in">size</span>();++i)</span><br><span class="line">        &#123;</span><br><span class="line">            vector&lt;<span class="type">int</span>&gt; t = <span class="built_in">counter</span>(words1[i]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;++j)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(t[j] &lt; Charcount[j])</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(j == <span class="number">25</span>)</span><br><span class="line">                    ans.<span class="built_in">push_back</span>(words1[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">counter</span><span class="params">(string &amp;tmp)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">res</span><span class="params">(<span class="number">26</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> c:tmp)</span><br><span class="line">            ++res[c - <span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;給予兩個字串的陣列，words1、words2&lt;br&gt;判斷words2內的單詞，是否為words1的Subsets&lt;br&gt;要符合所有word</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 48. Rotate Image</title>
    <link href="https://www.6crazydaniel9.net/2022/07/29/leetcode48/"/>
    <id>https://www.6crazydaniel9.net/2022/07/29/leetcode48/</id>
    <published>2022-07-28T17:14:21.795Z</published>
    <updated>2022-07-28T17:21:09.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>給一個n x n的矩陣，將它旋轉90度後，輸出結果。</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>原本矩陣的Column經過90度的轉至後，會變成Row，運用此項特性去解題!!!<br>找到矩陣旋轉的規律後，解題就會迅速許多。</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">rotate</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; matrix)</span> </span>&#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; tmp;</span><br><span class="line">        <span class="type">int</span> edge = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(tmp.<span class="built_in">size</span>() != matrix.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            vector&lt;<span class="type">int</span>&gt; t;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=matrix.<span class="built_in">size</span>()<span class="number">-1</span>;j&gt;=<span class="number">0</span>;--j)</span><br><span class="line">                t.<span class="built_in">push_back</span>(matrix[j][edge]);</span><br><span class="line">            tmp.<span class="built_in">push_back</span>(t);</span><br><span class="line">            edge++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        matrix = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;給一個n x n的矩陣，將它旋轉90度後，輸出結果。&lt;/p&gt;
&lt;h2 id=&quot;解題方法&quot;&gt;&lt;a href=&quot;#解題方法&quot; class=&quot;he</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 114. Flatten Binary Tree to Linked List</title>
    <link href="https://www.6crazydaniel9.net/2022/07/28/leetcode114/"/>
    <id>https://www.6crazydaniel9.net/2022/07/28/leetcode114/</id>
    <published>2022-07-27T16:31:02.114Z</published>
    <updated>2022-07-27T16:36:48.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>將Binary Tree轉成Linked List，而Linked List的順序需以pre-order traversal尋訪的順序。</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>採取的方法是參考網路上的。<br>主要是分別將節點以post-order的方式去做合併，這樣就可以達到題目所要求的目的。<br>先將左邊的節點串接在一起後，再放入右邊節點，而原本右節點就擺至最後。</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">flatten</span><span class="params">(TreeNode* root)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">postorder</span>(root);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">postorder</span><span class="params">(TreeNode* node)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!node)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="built_in">postorder</span>(node-&gt;left);</span><br><span class="line">        <span class="built_in">postorder</span>(node-&gt;right);        </span><br><span class="line">        <span class="comment">//Merge node</span></span><br><span class="line">        TreeNode *tmp = node-&gt;right;</span><br><span class="line">        node-&gt;right = node-&gt;left;</span><br><span class="line">        node-&gt;left = <span class="literal">nullptr</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(node-&gt;right)</span><br><span class="line">            node = node-&gt;right;</span><br><span class="line">        </span><br><span class="line">        node-&gt;right = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;將Binary Tree轉成Linked List，而Linked List的順序需以pre-order traversal尋訪的順序。&lt;/</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 240. Search a 2D Matrix II</title>
    <link href="https://www.6crazydaniel9.net/2022/07/25/leetcode240/"/>
    <id>https://www.6crazydaniel9.net/2022/07/25/leetcode240/</id>
    <published>2022-07-24T17:48:45.694Z</published>
    <updated>2022-07-25T12:09:44.567Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>在一個m x n的矩陣中，給予目標數，判斷目標數是否有在矩陣當中</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>直接使用find()去尋找目標數是否有在矩陣當中。<br>有個缺點就是Runtime時間超級長，或許有更好的方法去解。<br>但我目前只想到這樣做最方便QQ</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">searchMatrix</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; matrix, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="type">bool</span> ans = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;matrix.<span class="built_in">size</span>();++i)</span><br><span class="line">        &#123;</span><br><span class="line">            vector&lt;<span class="type">int</span>&gt;::iterator it = <span class="built_in">find</span>(matrix[i].<span class="built_in">begin</span>(),matrix[i].<span class="built_in">end</span>(),target);</span><br><span class="line">            <span class="keyword">if</span>(it != matrix[i].<span class="built_in">end</span>())</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(i == matrix.<span class="built_in">size</span>() - <span class="number">1</span> &amp;&amp; it == matrix[i].<span class="built_in">end</span>())</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;在一個m x n的矩陣中，給予目標數，判斷目標數是否有在矩陣當中&lt;/p&gt;
&lt;h2 id=&quot;解題方法&quot;&gt;&lt;a href=&quot;#解題方法&quot; cla</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 6. Zigzag Conversion</title>
    <link href="https://www.6crazydaniel9.net/2022/07/18/leetcode6/"/>
    <id>https://www.6crazydaniel9.net/2022/07/18/leetcode6/</id>
    <published>2022-07-17T17:23:37.453Z</published>
    <updated>2022-07-17T17:38:35.801Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>給予一個字串，將其排成Z形狀之後，再重新輸出模樣。<br>有點難以用文字形容，可能需要看過題目才會知道到底是怎麼一回事。</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>這題其實實作起來不會太困難，主要是尋找到規律。如果發現其中的要點，就非常容易。<br>但因為我本身屬於偏笨那類型，也是上網查詢別人的題目解說，發現其規律所在。<br>要點就在於，把轉乘成Z字型的字元位置寫出來就可以發現其中的奧妙，題目解起來就變十分輕鬆。</p><p>像是題目給予的”PAYPALISHIRING”轉出來變成”PAHNAPLSIIGYIR”，那就將題目這樣轉變</p><pre>0   6    121 5 7 11 132 4 8 10 143   9      </pre><p>第一行相差：6<br>第二行是：4 2 4 2 相間隔，但加起來也為6<br>第三行是：2 4 2 4<br>第四行是：6 </p><p>就發現有規律去解題!!!</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">convert</span><span class="params">(string s, <span class="type">int</span> numRows)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(numRows &lt;= <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        string ans;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> a = (numRows*<span class="number">2</span>) - <span class="number">2</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;numRows;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;s.<span class="built_in">length</span>();flag = flag?<span class="literal">false</span>:<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ans+=s[j];</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span> || i == numRows<span class="number">-1</span>)</span><br><span class="line">                    j+=a;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(flag)</span><br><span class="line">                    j+=i*<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    j+=(a-(i*<span class="number">2</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ans; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;給予一個字串，將其排成Z形狀之後，再重新輸出模樣。&lt;br&gt;有點難以用文字形容，可能需要看過題目才會知道到底是怎麼一回事。&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 34. Find First and Last Position of Element in Sorted Array</title>
    <link href="https://www.6crazydaniel9.net/2022/07/16/leetcode34/"/>
    <id>https://www.6crazydaniel9.net/2022/07/16/leetcode34/</id>
    <published>2022-07-16T14:59:19.398Z</published>
    <updated>2022-07-16T15:11:57.743Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>給予一串Array及目標數，找到其目標數在陣列第一次出現及最後一次出現的位置。</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>這裡的話，因為題目有限制說時間複雜度必須在log(n)，所以無法直接用迴圈硬做。<br>但我的方法，跑出來時間也是蠻久的，就也沒厲害QQ<br>先使用一個Iterator去尋找目標數在陣列出現的第一個位置，再使用迴圈從那個位置去找最後一次出現的位置。</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">searchRange</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>&#123;<span class="number">-1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">        </span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">        </span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;::iterator it1 = <span class="built_in">find</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>(),target);</span><br><span class="line">        <span class="type">int</span> firstPos = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(it1 != nums.<span class="built_in">end</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            firstPos = <span class="built_in">distance</span>(nums.<span class="built_in">begin</span>(),it1);</span><br><span class="line">            ans.<span class="built_in">push_back</span>(firstPos);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> tmp = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = firstPos;i &lt; nums.<span class="built_in">size</span>();++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] == target)</span><br><span class="line">                tmp = i;</span><br><span class="line">        &#125;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ans.<span class="built_in">size</span>() == <span class="number">1</span>)</span><br><span class="line">            ans.<span class="built_in">push_back</span>(<span class="number">-1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;給予一串Array及目標數，找到其目標數在陣列第一次出現及最後一次出現的位置。&lt;/p&gt;
&lt;h2 id=&quot;解題方法&quot;&gt;&lt;a href=&quot;#解題</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 2. Add Two Numbers</title>
    <link href="https://www.6crazydaniel9.net/2022/07/15/leetcode2/"/>
    <id>https://www.6crazydaniel9.net/2022/07/15/leetcode2/</id>
    <published>2022-07-15T13:39:28.905Z</published>
    <updated>2022-07-15T13:46:16.640Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>使用Linked List去做相加。</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>首先要先熟悉Linked List概念，去解題可能會比較快速。<br>主要分成兩個方向去做，考慮兩個Linked List是否等長。<br>如果等長，那只需再多考慮進位問題會不會有多一位數的問題。而如果兩個Linked List不等長的話，就需要再針對較長List繼續動作。</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">addTwoNumbers</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>&#123;</span><br><span class="line">        ListNode* node = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> sum,car = <span class="number">0</span>;</span><br><span class="line">        ListNode* ptrNode = node;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(l1 != <span class="literal">nullptr</span> &amp;&amp; l2 != <span class="literal">nullptr</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            sum = l1-&gt;val + l2-&gt;val + car;</span><br><span class="line">            car = sum / <span class="number">10</span>;</span><br><span class="line">            ptrNode-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(sum % <span class="number">10</span>);</span><br><span class="line">            </span><br><span class="line">            l1 = l1-&gt;next;</span><br><span class="line">            l2 = l2-&gt;next;</span><br><span class="line">            ptrNode = ptrNode-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(l1 != <span class="literal">nullptr</span> || l2 != <span class="literal">nullptr</span> || car != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(car != <span class="number">0</span> &amp;&amp; l1 == <span class="literal">nullptr</span> &amp;&amp; l2 == <span class="literal">nullptr</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ptrNode-&gt;next= <span class="keyword">new</span> <span class="built_in">ListNode</span>(car);</span><br><span class="line">                car = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(l1 != <span class="literal">nullptr</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sum = l1-&gt;val + car;</span><br><span class="line">                car = sum / <span class="number">10</span>;</span><br><span class="line">                ptrNode-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(sum % <span class="number">10</span>);</span><br><span class="line">                l1 = l1-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(l2 != <span class="literal">nullptr</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sum = l2-&gt;val + car;</span><br><span class="line">                car = sum / <span class="number">10</span>;</span><br><span class="line">                ptrNode-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(sum % <span class="number">10</span>);</span><br><span class="line">                l2 = l2-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">                    </span><br><span class="line">            ptrNode = ptrNode-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> node-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;使用Linked List去做相加。&lt;/p&gt;
&lt;h2 id=&quot;解題方法&quot;&gt;&lt;a href=&quot;#解題方法&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 105. Construct Binary Tree from Preorder and Inorder Traversal</title>
    <link href="https://www.6crazydaniel9.net/2022/07/14/leetcode105/"/>
    <id>https://www.6crazydaniel9.net/2022/07/14/leetcode105/</id>
    <published>2022-07-14T14:10:18.554Z</published>
    <updated>2022-07-14T14:29:28.398Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>利用前序(Preorder)和中序(Inorder)去建構一棵樹</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>在解決此問題，需要先知道Preorder和Inorder是如何相互應用，結合出一棵唯一樹。<br>首先，Preorder的產生為DLR，而Inorder為LDR。L為左子節點，D為父節點，R為右子節點，而在Preorder的第一元素都為一棵樹的Root。<br>只要熟悉此相關Tree之特性，其問題就較容易解決。分別找出Root及其對應左、右子樹。</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">buildTree</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; preorder, vector&lt;<span class="type">int</span>&gt;&amp; inorder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">findNode</span>(<span class="number">0</span>,preorder.<span class="built_in">size</span>()<span class="number">-1</span>,<span class="number">0</span>,inorder.<span class="built_in">size</span>()<span class="number">-1</span>,preorder,inorder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode* <span class="title">findNode</span><span class="params">(<span class="type">int</span> preStart,<span class="type">int</span> preEnd,<span class="type">int</span> inStart,<span class="type">int</span> inEnd,vector&lt;<span class="type">int</span>&gt;&amp; preorder, vector&lt;<span class="type">int</span>&gt;&amp; inorder)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preStart &gt; preEnd || inStart &gt; inEnd)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> idx = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        TreeNode* node = <span class="keyword">new</span> <span class="built_in">TreeNode</span>(preorder[preStart]);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = inStart;i&lt;=inEnd;++i) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;val == inorder[i])</span><br><span class="line">                idx = i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        node-&gt;left = <span class="built_in">findNode</span>(preStart+<span class="number">1</span>,preEnd+idx<span class="number">-1</span>,inStart,idx<span class="number">-1</span>,preorder,inorder);</span><br><span class="line">        node-&gt;right = <span class="built_in">findNode</span>(preStart+idx+<span class="number">1</span>-inStart,preEnd,idx+<span class="number">1</span>,inEnd,preorder,inorder);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> node;        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;利用前序(Preorder)和中序(Inorder)去建構一棵樹&lt;/p&gt;
&lt;h2 id=&quot;解題方法&quot;&gt;&lt;a href=&quot;#解題方法&quot; cla</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 905. Sort Array By Parity</title>
    <link href="https://www.6crazydaniel9.net/2022/05/02/leetcode905/"/>
    <id>https://www.6crazydaniel9.net/2022/05/02/leetcode905/</id>
    <published>2022-05-02T11:37:47.260Z</published>
    <updated>2022-05-02T11:39:55.879Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>排序奇、偶數，偶在前奇在後。</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>分別存在不同vector，最後在合併。<br>Badddddddddddddddd!</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sortArrayByParity</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; even;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; odd;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">0</span>;i&lt;nums.<span class="built_in">size</span>();++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> tmp = nums[i];</span><br><span class="line">            <span class="keyword">if</span>(tmp%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">                even.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                odd.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        even.<span class="built_in">insert</span>(even.<span class="built_in">end</span>(),odd.<span class="built_in">begin</span>(),odd.<span class="built_in">end</span>());</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> even;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;排序奇、偶數，偶在前奇在後。&lt;/p&gt;
&lt;h2 id=&quot;解題方法&quot;&gt;&lt;a href=&quot;#解題方法&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 844. Backspace String Compare</title>
    <link href="https://www.6crazydaniel9.net/2022/05/01/leetcode844/"/>
    <id>https://www.6crazydaniel9.net/2022/05/01/leetcode844/</id>
    <published>2022-05-01T07:51:19.166Z</published>
    <updated>2022-05-01T07:55:32.822Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>給定兩個字串s、t，’#’代表退格符號。退格完之後，去判斷s和t是否為相同字串。</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>暴力法解決，用Stack去做。<br>快樂的笨蛋</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">backspaceCompare</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        stack&lt;<span class="type">char</span>&gt; <span class="type">s_t</span>;</span><br><span class="line">        stack&lt;<span class="type">char</span>&gt; <span class="type">t_t</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i&lt;s.<span class="built_in">length</span>();++i)</span><br><span class="line">        &#123;   </span><br><span class="line">            <span class="keyword">if</span>(s[i] == <span class="string">&#x27;#&#x27;</span> &amp;&amp; <span class="type">s_t</span>.<span class="built_in">size</span>() !=<span class="number">0</span>)</span><br><span class="line">                <span class="type">s_t</span>.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i] != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">                <span class="type">s_t</span>.<span class="built_in">push</span>(s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i&lt;t.<span class="built_in">length</span>();++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(t[i] == <span class="string">&#x27;#&#x27;</span> &amp;&amp; <span class="type">t_t</span>.<span class="built_in">size</span>() !=<span class="number">0</span>)</span><br><span class="line">                <span class="type">t_t</span>.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(t[i] != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">                <span class="type">t_t</span>.<span class="built_in">push</span>(t[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="type">s_t</span>.<span class="built_in">size</span>() != <span class="type">t_t</span>.<span class="built_in">size</span>())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> size = <span class="type">s_t</span>.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">0</span>;i&lt;size;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="type">s_t</span>.<span class="built_in">top</span>() != <span class="type">t_t</span>.<span class="built_in">top</span>())</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="type">s_t</span>.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="type">t_t</span>.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;給定兩個字串s、t，’#’代表退格符號。退格完之後，去判斷s和t是否為相同字串。&lt;/p&gt;
&lt;h2 id=&quot;解題方法&quot;&gt;&lt;a href=&quot;#解</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 404. Sum of Left Leaves</title>
    <link href="https://www.6crazydaniel9.net/2022/03/18/leetcode404/"/>
    <id>https://www.6crazydaniel9.net/2022/03/18/leetcode404/</id>
    <published>2022-03-18T09:31:13.814Z</published>
    <updated>2022-03-18T09:35:01.319Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>總和所有最左邊節點且沒有子節點的值。</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>分別跑左邊和右邊的點，去判斷是否是左節點，再判斷其有無子節點。<br>Error 404!</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">countLeft</span><span class="params">(TreeNode* &amp;node, <span class="type">int</span>&amp;sum)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(node)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(node-&gt;left)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>((!node-&gt;left-&gt;left) &amp;&amp; (!node-&gt;left-&gt;right))</span><br><span class="line">                    sum+=node-&gt;left-&gt;val;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">countLeft</span>(node-&gt;left,sum);</span><br><span class="line">            <span class="built_in">countLeft</span>(node-&gt;right,sum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">sumOfLeftLeaves</span><span class="params">(TreeNode* root)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">countLeft</span>(root,sum);</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;總和所有最左邊節點且沒有子節點的值。&lt;/p&gt;
&lt;h2 id=&quot;解題方法&quot;&gt;&lt;a href=&quot;#解題方法&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 771. Jewels and Stones</title>
    <link href="https://www.6crazydaniel9.net/2022/03/03/leetcode771/"/>
    <id>https://www.6crazydaniel9.net/2022/03/03/leetcode771/</id>
    <published>2022-03-03T14:52:18.127Z</published>
    <updated>2022-03-18T09:31:05.258Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>找出是否為一樣的寶石。</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>就是用find去找，然後每找到一次就skr了。<br>skrrrrrrr!</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">numJewelsInStones</span><span class="params">(string jewels, string stones)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;stones.<span class="built_in">length</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> tmp = jewels.<span class="built_in">find</span>(stones[i]);</span><br><span class="line">            <span class="keyword">if</span>(tmp != jewels.npos)</span><br><span class="line">                ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;找出是否為一樣的寶石。&lt;/p&gt;
&lt;h2 id=&quot;解題方法&quot;&gt;&lt;a href=&quot;#解題方法&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 392. Is Subsequence</title>
    <link href="https://www.6crazydaniel9.net/2022/03/03/leetcode392/"/>
    <id>https://www.6crazydaniel9.net/2022/03/03/leetcode392/</id>
    <published>2022-03-02T16:22:45.029Z</published>
    <updated>2022-03-02T16:25:14.798Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>找出是否是另一個字串的子字串。</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>就是用find去找，然後每找到一次就從那個位置+1繼續找。<br>想不到吧!</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isSubsequence</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">length</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> tmp = t.<span class="built_in">find</span>(s[i],count);</span><br><span class="line">            <span class="keyword">if</span>(tmp == t.npos)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            count = tmp+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;找出是否是另一個字串的子字串。&lt;/p&gt;
&lt;h2 id=&quot;解題方法&quot;&gt;&lt;a href=&quot;#解題方法&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 101. Symmetric Tree</title>
    <link href="https://www.6crazydaniel9.net/2022/02/25/leetcode101/"/>
    <id>https://www.6crazydaniel9.net/2022/02/25/leetcode101/</id>
    <published>2022-02-25T02:57:38.908Z</published>
    <updated>2022-02-25T03:01:38.871Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>判斷左右的子節點有無對稱</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>分別跑左邊和右邊的點，進而去判斷是否一樣。<br>很搞剛</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">leftside</span> <span class="params">(TreeNode* &amp;node ,vector&lt;<span class="type">int</span>&gt; &amp;res)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(node)</span><br><span class="line">        &#123;</span><br><span class="line">            res.<span class="built_in">push_back</span>(node-&gt;val);</span><br><span class="line">            <span class="built_in">leftside</span>(node-&gt;left,res);</span><br><span class="line">            <span class="built_in">leftside</span>(node-&gt;right,res);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            res.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">rightside</span> <span class="params">(TreeNode* &amp;node , vector&lt;<span class="type">int</span>&gt; &amp;res1)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(node)</span><br><span class="line">        &#123;</span><br><span class="line">            res1.<span class="built_in">push_back</span>(node-&gt;val);</span><br><span class="line">            <span class="built_in">rightside</span>(node-&gt;right,res1);</span><br><span class="line">            <span class="built_in">rightside</span>(node-&gt;left,res1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            res1.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isSymmetric</span><span class="params">(TreeNode* root)</span> </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; res1;</span><br><span class="line">        <span class="built_in">leftside</span>(root-&gt;left,res);</span><br><span class="line">        <span class="built_in">rightside</span>(root-&gt;right,res1);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(res.<span class="built_in">size</span>() != res1.<span class="built_in">size</span>())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;res.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(res[i] != res1[i])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;判斷左右的子節點有無對稱&lt;/p&gt;
&lt;h2 id=&quot;解題方法&quot;&gt;&lt;a href=&quot;#解題方法&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>Leetcode - 349. Intersection of Two Arrays</title>
    <link href="https://www.6crazydaniel9.net/2022/02/24/leetcode349/"/>
    <id>https://www.6crazydaniel9.net/2022/02/24/leetcode349/</id>
    <published>2022-02-24T15:26:59.506Z</published>
    <updated>2022-02-24T16:49:49.272Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><p>找尋兩個vector內的交集(有相同的元素)。</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法"></a>解題方法</h2><p>就是先看nums1有什麼數字，存起來。再用nums2去檢查，如果有就放進去。</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">intersection</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums1, vector&lt;<span class="type">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; tmp;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums1.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!(tmp[nums1[i]]))</span><br><span class="line">                tmp[nums1[i]] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums2.<span class="built_in">size</span>();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp[nums2[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(nums2[i]);</span><br><span class="line">                tmp[nums2[i]] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目&quot;&gt;&lt;/a&gt;題目&lt;/h2&gt;&lt;p&gt;找尋兩個vector內的交集(有相同的元素)。&lt;/p&gt;
&lt;h2 id=&quot;解題方法&quot;&gt;&lt;a href=&quot;#解題方法&quot; class=&quot;heade</summary>
      
    
    
    
    <category term="Leetcode" scheme="https://www.6crazydaniel9.net/categories/Leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>第一屆捷運盃黑客松-尋找黑捷客</title>
    <link href="https://www.6crazydaniel9.net/2022/02/16/metro/"/>
    <id>https://www.6crazydaniel9.net/2022/02/16/metro/</id>
    <published>2022-02-16T12:04:27.000Z</published>
    <updated>2022-02-24T15:30:00.335Z</updated>
    
    <content type="html"><![CDATA[<p>競賽(官網已失效)： <a href="https://2021hackathon.metro.taipei/">第一屆捷運盃黑客松-尋找黑捷客</a></p><h2 id="計畫說明"><a href="#計畫說明" class="headerlink" title="計畫說明"></a>計畫說明</h2><p><code>捷運趴趴GO</code> (亞軍)</p><p><img src="/img/article/go.png" alt="app icon"></p><h3 id="計畫緣起"><a href="#計畫緣起" class="headerlink" title="計畫緣起"></a>計畫緣起</h3><p>台北捷運的日運載量大約落在213萬人次，在大眾交通工具系統中位居首位，大多數人的年齡大約落在15-39歲之間的年輕族群，這類族群也以觀光旅遊為大宗。<br>依據台北捷運官方手冊的統計，台北捷運在2019年三月時運載量突破了100億人次，台北捷運是台北都會區700萬人口及900萬觀光客最仰賴的交通工具。<br>觀光對台北捷運來說是重要的一環，對於那些來台北捷運觀光的旅客而說，他們會不了解周邊有什麼景點，所以通常都會上網搜尋。以我們大學生來說，假日時，常常會和朋友到台北出遊，可是因為交通因素，我們通常會選擇搭乘捷運，行程規劃也會以捷運周邊為主，但網路上的文章及分享通常頁面混亂、內容零星，也常常找到過時的評論。而且這些內容通常已經從主動分享變成直接的業配，造成無公正性及缺乏可比較性。像我們面對大量的雜訊、廣告，無法獲取真實有意義的資訊。<br>我們想到兩個可能的原因部落客可能因為內容不易被看見且無法獲得相應的回饋而導致創作慾望降低，此外，創作這些內容時間成本也蠻高的。</p><h3 id="計畫目的"><a href="#計畫目的" class="headerlink" title="計畫目的"></a>計畫目的</h3><p>因此我們想要提供可以輕鬆生產內容且推廣的平台、減少重複內容的出現、將產出內容的價值充分回饋給創作者。並且除了讓用戶方便取用之外，也可以真實支持到內容創作者跟店家。<br>我們的產品內容主要提供三種服務，首先第一個部分為旅遊推薦，藉由大家的分享讓旅客能找到適合自己的行程。再來是記錄行程，能夠將自己的旅程自動記錄下來，並分享到我們所設計的App上。最後是回饋機制，有良好的回饋機制能夠使創作者的動力提高。</p><h2 id="計畫構想"><a href="#計畫構想" class="headerlink" title="計畫構想"></a>計畫構想</h2><h3 id="計畫功能"><a href="#計畫功能" class="headerlink" title="計畫功能"></a>計畫功能</h3><ul><li>一打開App首先會看見我們系統所推薦的熱門行程，點選某一個行程後，會出現行程路線及交通工具</li><li>記錄行程的方式，先掃描車站QR Code啟動App並開始記錄，記錄行程時會自動記錄時間(系統時間)、地點(定位)以及判斷到達方式，回到車站再掃描一次QR Code結束紀錄並進入編輯行程頁面</li><li>結束紀錄之後，可以看到系統自動記錄的行程，即可進行編輯，例如: 增加景點，編輯時間、到達方式</li><li>再來是我們的特色AR導航，我們會在使用者導航的過程中，顯示商家的資訊以及限時優惠</li><li>我們想到可以在捷運站裡設置電子看板，能讓旅客與看板互動，看板的畫面是我們App的首頁，旅客可以掃描上方的QR Code進入我們的App，也可以掃描行程的QR Code進入行程畫面，最下方的兩個QR Code分別是紀錄行程跟結束紀錄</li></ul><h3 id="使用對象"><a href="#使用對象" class="headerlink" title="使用對象"></a>使用對象</h3><ul><li><p>生產者情境: 有一位Willy Wu他是一位旅遊達人喜歡分享自己的行程，但他的文章觸及率過低導致他沒有動力繼續創作，因此我們推薦他我們的App並教他如何使用<br>首先當他想要記錄旅程時，可以在捷運站掃描Qr Code啟動App開始記錄，過程中所記錄下來的軌跡會自動記載路程、所使用的交通方式以及停留的商家。回到車站或是到了別的站點可以掃碼結束旅程，並且在後續可以重新編輯路徑，刪除或新增站點，並且給予不同的站點推薦的指數與標籤。並進一步決定要公開共享路線或是私人傳遞給朋友。</p></li><li><p>使用者情境: 有一位Tiffany Green他喜歡城市旅遊，這次他到台北出差想順便在附近晃晃，但網路上的資料過時又龐大，他很難找到自己想要的行程，因此，我們向他介紹我們的App，首先他可以在捷運站裡的電子看板上或是打開我們的App搜尋想要的行程，找到想要的行程之後，按下導航鍵啟動旅程，導航過程中會顯示商家的資訊以及所提供的限時優惠，提供給旅客來做參考與使用。</p></li></ul><h2 id="計畫角色"><a href="#計畫角色" class="headerlink" title="計畫角色"></a>計畫角色</h2><p>我們APP的角色互動將分成4個部分生產者(旅遊達人)、使用者(旅客)、商家、捷運趴趴GO</p><ul><li><p>旅遊達人(旅程生產者): 旅遊達人透過親自造訪體驗，進而將旅遊經驗分享至平台上，以供遊客參考。若該行程得到不錯的反應，旅遊達人可以得到相對應的GOGO point也能獲得商家的廣告收益，讓創作動力提高</p></li><li><p>遊客(旅程消費者): 遊客可透過App或是電子看板選擇旅遊達人所分享行程，找到喜歡的行程後選擇導航可在路途中隨時接到商家資訊及限時優惠，如果喜歡這個行程，可以給旅遊達人按讚支持。</p></li><li><p>店家: 可以跟捷運趴趴GO合作，在電子看板上設置廣告來增加他的曝光度。在遊客導航中會設置限時優惠。那也會因旅客的按讚支持而間接的回饋給旅遊達人。</p></li><li><p>捷運趴趴GO: 為旅遊達人與遊客提供一個平台使用，結合捷運路線圖，透過旅遊達人的分享，給予遊客相對應的行程選擇。商家也多了一個平台能夠打廣告提高曝光度，捷運可以和趴趴GO合作。</p></li></ul><h2 id="計畫實現"><a href="#計畫實現" class="headerlink" title="計畫實現"></a>計畫實現</h2><p>App的前端我們預計會使用Flutter，後端使用Firebase做連接，導航部分會用Google Map API + ARcore，我們智能服務都是從後端伺服器的API做處理。</p><h2 id="效益評估"><a href="#效益評估" class="headerlink" title="效益評估"></a>效益評估</h2><ul><li>對於目前市場上兩個相似的產品funliday 及 gogoeasy，我們的產品在記錄行程此方面是全自動記錄的 可以省下不少時間及心力，旅程的景點是環繞捷運去做規劃的，捷運站關聯性會相較其他兩個來說還要高 且會給予旅遊達人點數回饋，我們也會和商家進行一些合作關係。</li><li>我們的廣告方式相較於其他雖然觸及範圍小但精準度高，適合捷運周邊商家，對於商家投放廣告上我們做了一些分析，捷運站內有著各式各樣的廣告，這些廣告雖然觸及大但是精準度卻是極低，對於商家來說想要投放這種廣告幾乎是遙不可及的，觀光客自然而然也無法輕易地接收到捷運附近商家的資訊，因此我們提供平台讓合作商家投放資訊給旅客，藉此媒合他們，當商家數量眾多時，其實可以創造和大公司一樣的效益，這邊是我們跟現有的廣告方式做比較，雖然我們的觸及範圍較小，但我們的觸及精準度和即時性會更高。</li></ul><div class="note primary modern"><p>GOGO point 主要就是由旅客的按讚數所得到的點數回饋 它可以兌換商家的優惠或是換取捷運的搭乘折扣</p></div><h2 id="計畫原型"><a href="#計畫原型" class="headerlink" title="計畫原型"></a>計畫原型</h2><p><img src="https://www.figma.com/proto/o7Ht8VZm2m0V7FOG2zyuw6/%E6%8D%B7%E9%81%8B%E8%B6%B4%E8%B6%B4go?node-id=10:2&scaling=scale-down&starting-point-node-id=10:2&show-proto-sidebar=1" alt="FigmaPrototype"></p><h2 id="決賽評審QA"><a href="#決賽評審QA" class="headerlink" title="決賽評審ＱＡ"></a>決賽評審ＱＡ</h2><ol><li>若是使用者有惡意行為出現，如何解決？（例如買榜）<br>我們可以採用兩種方式解決：1. 使用身份驗證及按讚行為的異常偵測，2. 使用類似medium平台的按愛心機制（每個帳號有一定額度的按讚度，再讓按讚度去除以按讚數則為該帳號一個讚的權重，則若是該帳號按讚越多，權重越低）</li><li>初期怎麼讓旅遊專家有動機，如何開啟整個生態圈？<br>花錢開啟生態圈是必然的，初期我們可以和熱門的部落格合作，請他們將旅程發布在平台上開啟整個生態圈。</li><li>著名平台kkday也是旅遊的平台，你們有何差異？<br>kkday內的旅程多屬於需開車到達的地方，而我們平台內的旅程均會圍繞整個捷運進行，因此我們平台內推送的行程對於捷運的黏著度會較kkday高出非常多。</li></ol><p>（還有一些問題忘記拉嗚嗚…)</p><h2 id="決賽簡報"><a href="#決賽簡報" class="headerlink" title="決賽簡報"></a>決賽簡報</h2><p><a href="/img/article/go/%E6%8D%B7%E9%81%8B%E8%B6%B4%E8%B6%B4GO.pptx">pdf</a></p><h2 id="相關報導"><a href="#相關報導" class="headerlink" title="相關報導"></a>相關報導</h2><ol><li><a href="https://www.cse.yzu.edu.tw/news/others?id=56">捷運盃黑客松-尋找黑捷客 - 元智資工獲亞軍</a></li><li><a href="https://tw.stock.yahoo.com/news/%E5%8C%97%E6%8D%B7%E9%A6%96%E5%B1%86%E5%B0%8B%E6%89%BE%E9%BB%91%E6%8D%B7%E5%AE%A2%E5%89%B5%E6%84%8F%E7%AB%B6%E8%B3%BD%E5%86%A0%E8%BB%8D%E6%8F%AD%E6%9B%89-115318930.html">北捷首屆尋找黑捷客創意競賽冠軍揭曉</a>（照片錯放錯啦嗚嗚嗚）</li><li><a href="https://www.cdns.com.tw/articles/507990">北捷首屆尋找黑捷客創意競賽冠軍揭曉</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;競賽(官網已失效)： &lt;a href=&quot;https://2021hackathon.metro.taipei/&quot;&gt;第一屆捷運盃黑客松-尋找黑捷客&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;計畫說明&quot;&gt;&lt;a href=&quot;#計畫說明&quot; class=&quot;headerlink&quot; title=&quot;</summary>
      
    
    
    
    <category term="Contest" scheme="https://www.6crazydaniel9.net/categories/Contest/"/>
    
    
    <category term="Google map API" scheme="https://www.6crazydaniel9.net/tags/Google-map-API/"/>
    
    <category term="contest" scheme="https://www.6crazydaniel9.net/tags/contest/"/>
    
  </entry>
  
</feed>
